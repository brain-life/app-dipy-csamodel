#!/bin/bash
#PBS -l nodes=4:ppn=16:dc2,walltime=0:45:00
#PBS -N app-dipy-csamodel
#PBS -V


#for local testing
if [ -z $SERVICE_DIR ]; then export SERVICE_DIR=`pwd`; fi
#ENV="IUHPC"

[ $PBS_O_WORKDIR ] && cd $PBS_O_WORKDIR

if [ $ENV == "IUHPC" ]; then
	if [ $HPC == "KARST" ]; then
		module unload python
		module load anaconda2
		module load freesurfer/6.0.0
	fi
	if [ $HPC == "CARBONATE" ]; then
		module load freesurfer/6.0.0
	fi
	
	export PYTHONPATH=/N/u/brlife/Karst/git/dipy:$PYTHONPATH
	export PYTHONPATH=/N/u/aryaam/Karst/github_repos/nibabel:$PYTHONPATH
fi

if [ $ENV == "VM" ]; then
	export PYTHONPATH=$PYTHONPATH:/usr/local/dipy
	export PYTHONPATH=$PYTHONPATH:/usr/local/nibabel
fi

input_nii_gz=`$SERVICE_DIR/jq -r .data_file config.json`
freesurfer=`$SERVICE_DIR/jq -r .freesurfer config.json`

if [ ! -f volume.nii.gz ]; then
	echo "converting freesurfer segments $freesufer to volume using $input_nii_gz"
	echo mri_label2vol \
		--seg $freesurfer/mri/aparc+aseg.mgz \
		--regheader $freesurfer/mri/aparc+aseg.mgz \
		--temp $input_nii_gz \
		--o volume.nii.gz
	mri_label2vol \
		--seg $freesurfer/mri/aparc+aseg.mgz \
		--regheader $freesurfer/mri/aparc+aseg.mgz \
		--temp $input_nii_gz \
		--o volume.nii.gz
	if [ ! $? -eq 0 ]; then
		echo "failed to mri_label2vol"
		exit 1
	fi
fi

echo "running main"
time python $SERVICE_DIR/main.py
ret=$?
if [ $ret -ne 0 ]; then
    echo "main.py failed"
    echo $ret > finished
    exit $ret
fi
if [ -s peaks.pam5 ];
then 
	echo 0 > finished
else 
	echo "files missing"
	echo 1 > finished
	exit 1
fi
